{"version":3,"sources":["components/Navbar.tsx","App.tsx","components/HomePage.tsx","types/Person.ts","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["Navbar","useSearchParams","searchParams","generateClassForLink","isActive","cn","className","role","to","pathname","search","toString","App","HomePage","ErrorOption","Gender","SortBy","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","PeopleFilters","query","handleQueryChange","sex","centuries","handleCenturiesChange","resetAll","MALE","FEMALE","type","placeholder","onChange","map","century","includes","Loader","PeopleTable","person","getParentLink","generateClassForPerson","slug","useParams","getParentContent","parentName","result","parent","name","motherName","fatherName","adress","born","died","motherContent","fatherContent","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","NoError","errorOption","setErrorOption","setSearchParams","get","getAll","sort","order","generateClass","sortBy","handleSortChange","isSortBy","isDesc","filteredPeople","useMemo","filteredByQuery","filter","toLocaleLowerCase","filteredBySex","length","String","bornYear","Math","ceil","filteredAndSortedPeople","a","b","localeCompare","useEffect","fetch","then","response","json","data","Empty","catch","Wrong","finally","find","mother","event","target","c","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.dde6f70f.chunk.js","sourcesContent":["import { NavLink, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  const [searchParams] = useSearchParams();\n  const generateClassForLink = ({ isActive }: {\n    isActive: boolean\n  }) => cn('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={generateClassForLink} to=\"/\">\n            Home\n          </NavLink>\n          <NavLink\n            className={generateClassForLink}\n            to={{\n              pathname: 'people',\n              search: searchParams.toString(),\n            }}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => <h1 className=\"title\">Home Page</h1>;\n","export interface Person {\n  name: string,\n  sex: string,\n  born: number,\n  died: number,\n  fatherName: string | null,\n  motherName: string | null,\n  slug: string,\n  mother?: Person,\n  father?: Person,\n}\n\nexport enum ErrorOption {\n  NoError,\n  Wrong,\n  Empty,\n}\n\nexport enum Gender {\n  All = 'all',\n  MALE = 'm',\n  FEMALE = 'f',\n}\n\nexport enum SortBy {\n  name = 'name',\n  sex = 'sex',\n  born = 'born',\n  died = 'died',\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { SearchLink } from './SearchLink';\nimport { Gender } from '../types';\n\ntype Props = {\n  query: string;\n  handleQueryChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  sex: string;\n  centuries: string[];\n  handleCenturiesChange: (par: string) => string[];\n  resetAll: () => {\n    centuries: null,\n    query: null,\n    sex: null,\n    sort: null,\n    order: null,\n  };\n};\n\nexport const PeopleFilters: FC<Props> = ({\n  query,\n  handleQueryChange,\n  sex,\n  centuries,\n  handleCenturiesChange,\n  resetAll,\n}) => {\n  const centuriesArray = ['16', '17', '18', '19', '20'];\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={cn({ 'is-active': !sex })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={cn({ 'is-active': sex === Gender.MALE })}\n          params={{ sex: Gender.MALE }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={cn({ 'is-active': sex === Gender.FEMALE })}\n          params={{ sex: Gender.FEMALE }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuriesArray.map((century) => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={cn('button mr-1', {\n                  'is-info': centuries.includes(century),\n                })}\n                params={{ centuries: handleCenturiesChange(century) }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={resetAll()}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { NavLink, useParams, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person, Gender } from '../types';\n\ntype Props = {\n  person: Person;\n  getParentLink: (par: string) => Person | undefined;\n};\nexport const PeopleTable: FC<Props> = ({ person, getParentLink }) => {\n  const [searchParams] = useSearchParams();\n  const generateClassForPerson = cn({\n    'has-text-danger': person.sex === Gender.FEMALE,\n  });\n\n  const { slug } = useParams();\n\n  const getParentContent = (parentName: string) => {\n    let result;\n\n    if (getParentLink(parentName)) {\n      const parent = getParentLink(parentName);\n\n      result = (\n        <td>\n          <NavLink\n            to={{\n              pathname: `/people/${parent?.slug}`,\n              search: searchParams.toString(),\n            }}\n            className={cn({\n              'has-text-danger': parent?.sex === Gender.FEMALE,\n            })}\n          >\n            {parent?.name}\n          </NavLink>\n        </td>\n      );\n    }\n\n    if (parentName && !getParentLink(parentName)) {\n      result = <td>{parentName}</td>;\n    }\n\n    return result;\n  };\n\n  const {\n    motherName,\n    fatherName,\n    slug: adress,\n    name,\n    sex,\n    born,\n    died,\n  } = person;\n\n  const motherContent = motherName\n    ? getParentContent(motherName)\n    : <td>-</td>;\n\n  const fatherContent = fatherName\n    ? getParentContent(fatherName)\n    : <td>-</td>;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={slug === adress ? 'has-background-warning' : ''}\n    >\n      <td>\n        <NavLink\n          className={generateClassForPerson}\n          to={{\n            pathname: `/people/${adress}`,\n            search: searchParams.toString(),\n          }}\n        >\n          {name}\n        </NavLink>\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      {motherContent}\n      {fatherContent}\n    </tr>\n  );\n};\n","import { useEffect, useState, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { ErrorOption, Person, SortBy } from '../types';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { SearchLink } from './SearchLink';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorOption, setErrorOption] = useState(ErrorOption.NoError);\n  const PEOPLE_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  const resetAll = () => {\n    return {\n      centuries: null,\n      query: null,\n      sex: null,\n      sort: null,\n      order: null,\n    };\n  };\n\n  const getCentury = (bornYear: number) => Math.ceil(bornYear / 100);\n\n  const generateClass = (sortBy: string) => {\n    return cn('fas fa-sort', {\n      'fa-sort-up': sort === sortBy && !order,\n      'fa-sort-down': sort === sortBy && order,\n    });\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const params = new URLSearchParams(searchParams);\n\n    if (event.target.value) {\n      params.set('query', event.target.value);\n    } else {\n      params.delete('query');\n    }\n\n    setSearchParams(params.toString());\n  };\n\n  const handleCenturiesChange = (century: string) => {\n    return centuries.includes(century)\n      ? centuries.filter((c) => c !== century)\n      : [...centuries, century];\n  };\n\n  const handleSortChange = (sortBy: string) => {\n    let result: {\n      sort: string | null, order: string | null\n    } = { sort: sortBy, order: 'desc' };\n    const isSortBy = sort === sortBy;\n    const isDesc = order === 'desc';\n\n    if (isSortBy && isDesc) {\n      result = { sort: null, order: null };\n    }\n\n    if (!isSortBy && !isDesc) {\n      result = { sort: sortBy, order: null };\n    }\n\n    if (!isSortBy && isDesc) {\n      result = { sort: sortBy, order: null };\n    }\n\n    return result;\n  };\n\n  const filteredPeople = useMemo(() => {\n    const filteredByQuery = query\n      ? people.filter((person) => {\n        const { name, motherName, fatherName } = person;\n\n        return (\n          name.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n          || motherName?.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n          || fatherName?.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n        );\n      })\n      : people;\n\n    const filteredBySex = sex\n      ? filteredByQuery.filter((person) => person.sex === sex)\n      : filteredByQuery;\n\n    const filteredByCenturies = centuries.length\n      ? filteredBySex.filter((person) => centuries\n        .includes(String(getCentury(person.born))))\n      : filteredBySex;\n\n    return filteredByCenturies;\n  }, [query, people, sex, centuries]);\n\n  const filteredAndSortedPeople = useMemo(() => {\n    const sortedPeople = sort\n      ? [...filteredPeople].sort((a, b) => {\n        switch (sort) {\n          case SortBy.name:\n            return !order\n              ? a.name.localeCompare(b.name)\n              : b.name.localeCompare(a.name);\n          case SortBy.sex:\n            return !order\n              ? a.sex.localeCompare(b.sex)\n              : b.sex.localeCompare(a.sex);\n          case SortBy.born:\n            return !order ? a.born - b.born : b.born - a.born;\n          case SortBy.died:\n            return !order ? a.died - b.died : b.died - a.died;\n          default:\n            return 0;\n        }\n      })\n      : filteredPeople;\n\n    return sortedPeople;\n  }, [sort, order, filteredPeople]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(PEOPLE_URL)\n      .then((response) => response.json())\n      .then((data) => {\n        if (!data.length) {\n          setErrorOption(ErrorOption.Empty);\n        }\n\n        setPeople(data);\n      })\n      .catch(() => setErrorOption(ErrorOption.Wrong))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const getParentLink = (parentName: string) => {\n    return people.find((person) => person.name === parentName);\n  };\n\n  return (\n    <>\n      {people.map((person) => (\n        <p key={person.slug}>{person.mother?.slug}</p>\n      ))}\n      <h1 className=\"title\">People Page</h1>\n      {isLoading && <Loader />}\n      {!isLoading && errorOption === ErrorOption.NoError && (\n        <div className=\"block\">\n          <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters\n                query={query}\n                handleQueryChange={handleQueryChange}\n                sex={sex}\n                centuries={centuries}\n                handleCenturiesChange={handleCenturiesChange}\n                resetAll={resetAll}\n              />\n            </div>\n            <div className=\"column\">\n              <div className=\"box table-container\">\n                {isLoading && errorOption === ErrorOption.NoError && <Loader />}\n                {!isLoading && errorOption === ErrorOption.NoError && (\n                  <table\n                    data-cy=\"peopleTable\"\n                    className=\"table is-striped\n                   is-hoverable is-narrow is-fullwidth\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>\n                          <span className=\"is-flex is-flex-wrap-nowrap\">\n                            Name\n                            <SearchLink params={handleSortChange('name')}>\n                              <span className=\"icon\">\n                                <i className={generateClass('name')} />\n                              </span>\n                            </SearchLink>\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"is-flex is-flex-wrap-nowrap\">\n                            Sex\n                            <SearchLink params={handleSortChange('sex')}>\n                              <span className=\"icon\">\n                                <i className={generateClass('sex')} />\n                              </span>\n                            </SearchLink>\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"is-flex is-flex-wrap-nowrap\">\n                            Born\n                            <SearchLink params={handleSortChange('born')}>\n                              <span className=\"icon\">\n                                <i className={generateClass('born')} />\n                              </span>\n                            </SearchLink>\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"is-flex is-flex-wrap-nowrap\">\n                            Died\n                            <SearchLink params={handleSortChange('died')}>\n                              <span className=\"icon\">\n                                <i className={generateClass('died')} />\n                              </span>\n                            </SearchLink>\n                          </span>\n                        </th>\n                        <th>Mother</th>\n                        <th>Father</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {filteredPeople.length && filteredAndSortedPeople\n                        .map((person: Person) => (\n                          <PeopleTable\n                            key={person.slug}\n                            person={person}\n                            getParentLink={getParentLink}\n                          />\n                        ))}\n                    </tbody>\n                  </table>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {errorOption === ErrorOption.Empty && !isLoading && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n\n      {errorOption === ErrorOption.Wrong && !isLoading && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n    </>\n  );\n};\n","export const NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people/:slug?\" element={<PeoplePage />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route path=\"/home\" element={<Navigate replace to=\"/\" />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}